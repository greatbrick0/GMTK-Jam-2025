[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://ow3ikl2nla5x"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_li3yd"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_vpru7"]
parameter_name = "Hit_Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_hh2fs"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_y66qk"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8ps86"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform sampler2D Hit_Texture : source_color;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Hit_Texture, UV);
	float n_out4p1 = n_out4p0.r;
	float n_out4p2 = n_out4p0.g;


// FloatOp:6
	float n_out6p0 = n_out4p1 + n_out4p2;


// FloatOp:5
	float n_out5p0 = n_out6p0 * n_out2p4;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out5p0;


}
"
graph_offset = Vector2(-149.133, -89.6227)
flags/unshaded = true
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_li3yd")
nodes/fragment/2/position = Vector2(-240, -60)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_vpru7")
nodes/fragment/3/position = Vector2(-800, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_hh2fs")
nodes/fragment/4/position = Vector2(-460, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_y66qk")
nodes/fragment/5/position = Vector2(80, 140)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_8ps86")
nodes/fragment/6/position = Vector2(-160, 280)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 2, 4, 5, 1, 4, 1, 6, 0, 4, 2, 6, 1, 6, 0, 5, 0, 5, 0, 0, 1, 2, 0, 0, 0)
