[gd_scene load_steps=13 format=3 uid="uid://vyl2lvfmqryk"]

[ext_resource type="Script" uid="uid://dfui5s3xwrtpg" path="res://Scripts/conveyor.gd" id="1_5xoq8"]
[ext_resource type="Texture2D" uid="uid://w568fg7ywbft" path="res://Art/Images/Generated Icons/Conveyor.png" id="2_vkl7l"]
[ext_resource type="PackedScene" uid="uid://cvcbu6cpr35lq" path="res://Scenes/Placeables/placeable_mortar.tscn" id="3_247tj"]
[ext_resource type="PackedScene" uid="uid://b3f7uw5siawlq" path="res://Scenes/Placeables/placeable_pawn.tscn" id="4_g8mpg"]
[ext_resource type="PackedScene" uid="uid://cytqo4o0vo1xx" path="res://Scenes/Placeables/placeable_looper.tscn" id="5_247tj"]
[ext_resource type="PackedScene" uid="uid://d1smg8pi88yd8" path="res://Scenes/Placeables/placeable_princess.tscn" id="5_jhnkp"]
[ext_resource type="Texture2D" uid="uid://b8ug3ij5dec4q" path="res://Art/Images/ConveyorGlass.png" id="6_6nye6"]
[ext_resource type="Texture2D" uid="uid://c5q0fpx6x5cng" path="res://Art/Images/scrap.png" id="7_2rft0"]
[ext_resource type="Theme" uid="uid://gisw3slincuq" path="res://ClearTheme.tres" id="8_vkl7l"]

[sub_resource type="Animation" id="Animation_jhnkp"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:stockMoveValue")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_g8mpg"]
resource_name = "Rotate"
length = 0.5
tracks/0/type = "method"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.466667, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"values": [{
"args": [true],
"method": &"SetStockIsMoving"
}, {
"args": [],
"method": &"RemoveFinalStock"
}, {
"args": [false],
"method": &"SetStockIsMoving"
}]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:stockMoveValue")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.48),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_jhnkp"]
_data = {
&"RESET": SubResource("Animation_jhnkp"),
&"Rotate": SubResource("Animation_g8mpg")
}

[node name="ConveyorHolder" type="Node2D" node_paths=PackedStringArray("stockHolder")]
script = ExtResource("1_5xoq8")
stockHolder = NodePath("PlaceableHolder")
placeableOptions = Array[PackedScene]([ExtResource("5_jhnkp"), ExtResource("4_g8mpg"), ExtResource("3_247tj"), ExtResource("5_247tj")])

[node name="ConveyorBase" type="Sprite2D" parent="."]
scale = Vector2(0.6, 0.6)
texture = ExtResource("2_vkl7l")

[node name="Positions" type="Node2D" parent="."]

[node name="StartPos" type="Marker2D" parent="Positions"]
position = Vector2(175, -210)
scale = Vector2(1e-05, 1e-05)

[node name="Pos0" type="Marker2D" parent="Positions"]
position = Vector2(245, -115)
scale = Vector2(0.8, 0.8)

[node name="Pos1" type="Marker2D" parent="Positions"]
position = Vector2(255, 0)
scale = Vector2(0.8, 0.8)

[node name="Pos2" type="Marker2D" parent="Positions"]
position = Vector2(245, 115)
scale = Vector2(0.8, 0.8)

[node name="Pos3" type="Marker2D" parent="Positions"]
position = Vector2(175, 210)
scale = Vector2(0.8, 0.8)

[node name="Pos4" type="Marker2D" parent="Positions"]
position = Vector2(100, 145)

[node name="Pos5" type="Marker2D" parent="Positions"]
position = Vector2(90, 0)

[node name="Pos6" type="Marker2D" parent="Positions"]
position = Vector2(100, -145)

[node name="Pos7" type="Marker2D" parent="Positions"]
position = Vector2(175, -210)
scale = Vector2(1e-05, 1e-05)

[node name="PlaceableHolder" type="Node2D" parent="."]

[node name="ConveyorGlass" type="Sprite2D" parent="."]
scale = Vector2(0.6, 0.6)
texture = ExtResource("6_6nye6")

[node name="Prices" type="Node2D" parent="."]

[node name="Price0" type="Node2D" parent="Prices"]
visible = false
position = Vector2(20, 179)

[node name="Sprite2D" type="Sprite2D" parent="Prices/Price0"]
position = Vector2(20, 0)
scale = Vector2(0.4, 0.4)
texture = ExtResource("7_2rft0")

[node name="Label" type="Label" parent="Prices/Price0"]
anchors_preset = 4
anchor_top = 0.5
anchor_bottom = 0.5
offset_left = 14.0
offset_top = -20.0
offset_right = 44.0
offset_bottom = 14.0
grow_vertical = 2
theme_override_font_sizes/font_size = 24
text = "3"
horizontal_alignment = 1

[node name="Price1" type="Node2D" parent="Prices"]
visible = false
position = Vector2(0, -6)

[node name="Sprite2D" type="Sprite2D" parent="Prices/Price1"]
position = Vector2(20, 0)
scale = Vector2(0.4, 0.4)
texture = ExtResource("7_2rft0")

[node name="Label" type="Label" parent="Prices/Price1"]
anchors_preset = 4
anchor_top = 0.5
anchor_bottom = 0.5
offset_left = 14.0
offset_top = -20.0
offset_right = 44.0
offset_bottom = 14.0
grow_vertical = 2
theme_override_font_sizes/font_size = 24
text = "3"
horizontal_alignment = 1

[node name="Price2" type="Node2D" parent="Prices"]
visible = false
position = Vector2(22, -185)

[node name="Sprite2D" type="Sprite2D" parent="Prices/Price2"]
position = Vector2(20, 0)
scale = Vector2(0.4, 0.4)
texture = ExtResource("7_2rft0")

[node name="Label" type="Label" parent="Prices/Price2"]
anchors_preset = 4
anchor_top = 0.5
anchor_bottom = 0.5
offset_left = 14.0
offset_top = -20.0
offset_right = 44.0
offset_bottom = 14.0
grow_vertical = 2
theme_override_font_sizes/font_size = 24
text = "3"
horizontal_alignment = 1

[node name="PayForRotate" type="Node2D" parent="."]
position = Vector2(175, 0)

[node name="PayForRotateButton" type="Button" parent="PayForRotate"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -35.0
offset_top = -35.0
offset_right = 35.0
offset_bottom = 35.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("8_vkl7l")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_jhnkp")
}

[connection signal="pressed" from="PayForRotate/PayForRotateButton" to="." method="_on_pay_for_rotate_button_pressed"]
